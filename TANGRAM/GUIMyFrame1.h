#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include
#include "Tan.h"
#include <wx/filedlg.h>
#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/colourdata.h>
#include <wx/colordlg.h>

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
protected:
	// Handlers for MyFrame1 events.
	void MyFrame1OnKeyDown(wxKeyEvent& event);
	void MyFrame1OnKeyUp(wxKeyEvent& event);
	void MyFrame1OnUpdateUI(wxUpdateUIEvent& event);
	void panelWorkspaceOnKeyDown(wxKeyEvent& event);
	void panelWorkspaceOnKeyUp(wxKeyEvent& event);
	void panelWorkspaceOnMouseEvents(wxMouseEvent& event);
	void panelWorkspaceOnRightDown(wxMouseEvent& event);
	void panelWorkspaceOnUpdateUI(wxUpdateUIEvent& event);
	void panelImageOnKeyDown(wxKeyEvent& event);
	void panelImageOnKeyUp(wxKeyEvent& event);
	void panelImageOnRightDown(wxMouseEvent& event);
	void buttonClearOnButtonClick(wxCommandEvent& event);
	void buttonClearOnKeyDown(wxKeyEvent& event);
	void buttonClearOnKeyUp(wxKeyEvent& event);
	void buttonClearOnRightDown(wxMouseEvent& event);
	void buttonNewOnButtonClick(wxCommandEvent& event);
	void buttonNewOnKeyDown(wxKeyEvent& event);
	void buttonNewOnKeyUp(wxKeyEvent& event);
	void buttonNewOnRightDown(wxMouseEvent& event);
	void buttonSolveOnButtonClick(wxCommandEvent& event);
	void buttonSolveOnKeyDown(wxKeyEvent& event);
	void buttonSolveOnKeyUp(wxKeyEvent& event);
	void panelTrayOnKeyDown(wxKeyEvent& event);
	void panelTrayOnKeyUp(wxKeyEvent& event);
	void panelTrayOnMouseEvents(wxMouseEvent& event);
	void panelTrayOnRightDown(wxMouseEvent& event);
	void panelTrayOnUpdateUI(wxUpdateUIEvent& event);
public:
	/** Constructor */
	GUIMyFrame1(wxWindow* parent);
	//// end generated class members
	Tan tan1, tan2, tan3, tan4, tan5, tan6, tan7;
	std::vector<Tan*> TanTiles;
	wxPoint MousePositionInTray;
	wxPoint MousePositionInWorkspace;
	bool MouseClickedInWorkspace;
	bool MouseClickedInTray;
	static bool QPressed, EPressed;
	static bool isAnyTanHeld;
	bool showSolution = false;
	int random_number = -1;

	/**@brief Ustawia zasobnik
	*
	* - ustawia wsp�rz�dne wierzcho�k�w p�ytek oraz pushuje wszystkie tany do wektora TanTiles
	*/
	void setTray();

	/**@brief Rysuje zasobnik
	*
	* - ustawia wxPen i wxBrush, ustawia origin na �rodek zasobnika, dla ka�dego tana sprawdza czy zosta� klikni�ty
	*/
	void DrawTray();

	/**@brief Rysuje obszar roboczy
	*
	* - ustawia wxPen i wxBrush, ustawia origin na �rodek obszaru roboczego, dla ka�dego tana sprawdza czy zosta� klikni�ty i ustawia offset
	*/
	void DrawWorkspace();
	void DrawImage();
	void pickUp();

};

#endif // __GUIMyFrame1__
